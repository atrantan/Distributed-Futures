\relax 
\catcode`:\active
\catcode`;\active
\catcode`!\active
\catcode`?\active
\ifx\hyper@anchor\@undefined
\global \let \oldcontentsline\contentsline
\gdef \contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global \let \oldnewlabel\newlabel
\gdef \newlabel#1#2{\newlabelxx{#1}#2}
\gdef \newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\let \contentsline\oldcontentsline
\let \newlabel\oldnewlabel}
\else
\global \let \hyper@last\relax 
\fi

\providecommand*\HyPL@Entry[1]{}
\HyPL@Entry{0<</S/D>>}
\select@language{french}
\@writefile{toc}{\select@language{french}}
\@writefile{lof}{\select@language{french}}
\@writefile{lot}{\select@language{french}}
\HyPL@Entry{2<</S/D>>}
\HyPL@Entry{4<</S/D>>}
\select@language{greek}
\@writefile{toc}{\select@language{greek}}
\@writefile{lof}{\select@language{greek}}
\@writefile{lot}{\select@language{greek}}
\HyPL@Entry{6<</S/D>>}
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\HyPL@Entry{8<</S/D>>}
\HyPL@Entry{9<</S/R>>}
\HyPL@Entry{13<</S/D>>}
\citation{Ayguade:2009:DOT:1512157.1512430}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction}{3}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Motivation}{3}{section.1.1}}
\citation{Nieplocha99armci:a}
\citation{Shah:1998:PEL:876880.879642}
\citation{Chapman:2010:IOS:2020373.2020375}
\citation{Nieplocha:2006:AAP:1125980.1125985}
\citation{Nieplocha99armci:a}
\citation{Ayguade:2009:DOT:1512157.1512430,Blumofe95cilk:an}
\citation{Saunders:2003:AAP:966049.781534,Beckman96tulip:a,Vadhiyar03gradsolve-}
\citation{Foster96thenexus}
\citation{HPX:TOBE}
\citation{CPP:Threads}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Background}{6}{section.1.2}}
\newlabel{sect:mpi-one-sided}{{1.2}{6}{Background\relax }{section.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}MPI one-sided communication}{6}{subsection.1.2.1}}
\citation{Dinan:2012:SGA:2357496.2358660}
\citation{Nieplocha:2006:AAP:1125980.1125985}
\citation{Nieplocha99armci:a}
\citation{Bonachea:mpi2}
\citation{A_hydra-mpi:an,Cui:2010:SES:1884643.1884646}
\citation{HPX:TOBE}
\citation{Kaiser:2009:PAP:1678991.1679815}
\citation{Shah:1998:PEL:876880.879642}
\citation{Kale93charm++:a}
\citation{Saunders:2003:AAP:966049.781534}
\citation{Foster96thenexus}
\citation{Bonachea:ammpi}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Related Work}{7}{section.1.3}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Design and Implementation}{9}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces Overview of our futures library design.\relax }}{9}{figure.caption.4}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:system_overview}{{2.1}{9}{Overview of our futures library design.\relax \relax }{figure.caption.4}{}}
\citation{Ramey:2004:Boost:Serialization}
\citation{Gregor:2005:Boost:MPI}
\citation{Ramey:2004:Boost:Serialization}
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces  A simple hello world implementation using the distributed futures interface. The output of the program on process 0 would be "- Master :Hello 1".\relax }}{11}{figure.caption.5}}
\newlabel{lst:hello}{{2.2}{11}{ A simple hello world implementation using the distributed futures interface. The output of the program on process 0 would be "- Master :Hello 1".\relax \relax }{figure.caption.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Futures Interface}{11}{section.2.1}}
\newlabel{sect:futures-interface}{{2.1}{11}{Futures Interface\relax }{section.2.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces  The control flow of the hello world program in figture~\ref  {lst:hello}.\relax }}{12}{figure.caption.6}}
\newlabel{fig:helloCF}{{2.3}{12}{ The control flow of the hello world program in figture~\ref {lst:hello}.\relax \relax }{figure.caption.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.4}{\ignorespaces The \emph  {async\_function} function class definition. All \emph  {jobs} in our system are instances of this class. The base class \emph  {\_job} is used for serialization purposes as well.\relax }}{13}{figure.caption.7}}
\newlabel{lst:async_function}{{2.4}{13}{The \emph {async\_function} function class definition. All \emph {jobs} in our system are instances of this class. The base class \emph {\_job} is used for serialization purposes as well.\relax \relax }{figure.caption.7}{}}
\citation{Dinan:2011:NCC:2042476.2042508}
\citation{Dinan:2011:NCC:2042476.2042508}
\@writefile{lof}{\contentsline {figure}{\numberline {2.5}{\ignorespaces A fibonacci implementation using the distributed futures interface\relax }}{14}{figure.caption.8}}
\newlabel{lst:fib}{{2.5}{14}{A fibonacci implementation using the distributed futures interface\relax \relax }{figure.caption.8}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Communication}{14}{section.2.2}}
\newlabel{sect:communication}{{2.2}{14}{Communication\relax }{section.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Shared Address Space}{14}{subsection.2.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.6}{\ignorespaces The function used to set a future's value. The first version is for primitive data types, where as the second is for serializable objects.\relax }}{15}{figure.caption.9}}
\newlabel{lst:set_data}{{2.6}{15}{The function used to set a future's value. The first version is for primitive data types, where as the second is for serializable objects.\relax \relax }{figure.caption.9}{}}
\citation{Tanenbaum:2007:MOS:1410217}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}Mutexes}{16}{subsection.2.2.2}}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Shared Memory Management}{16}{section.2.3}}
\newlabel{sect:shared-memory-manager}{{2.3}{16}{Shared Memory Management\relax }{section.2.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.7}{\ignorespaces Shared Memory Manager keeps a map of free lists, indexed by the page size. For page size that do not match any predefined ones, we use the \emph  {other} page size free list.\relax }}{17}{figure.caption.10}}
\newlabel{fig:freeLists}{{2.7}{17}{Shared Memory Manager keeps a map of free lists, indexed by the page size. For page size that do not match any predefined ones, we use the \emph {other} page size free list.\relax \relax }{figure.caption.10}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.1}Memory Allocation/Deallocation}{17}{subsection.2.3.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.8}{\ignorespaces During allocation, when a large enough space is found, the allocated page is removed from the node.\relax }}{18}{figure.caption.11}}
\newlabel{fig:alloc}{{2.8}{18}{During allocation, when a large enough space is found, the allocated page is removed from the node.\relax \relax }{figure.caption.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.9}{\ignorespaces By freeing data at base pointer 512, creates a continuous space between base pointer 0 and base pointer 640, causing the list nodes to merge into one.\relax }}{19}{figure.caption.12}}
\newlabel{fig:free}{{2.9}{19}{By freeing data at base pointer 512, creates a continuous space between base pointer 0 and base pointer 640, causing the list nodes to merge into one.\relax \relax }{figure.caption.12}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.4}Scheduler}{19}{section.2.4}}
\newlabel{sect:scheduler}{{2.4}{19}{Scheduler\relax }{section.2.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.10}{\ignorespaces Shared stack where a worker process keeps its pending jobs. Entries can have varied sizes, this size is stored at the beginning of the entry and can be used to retrieve the corresponding job. Information for the specific stack,like size and head, are stored at the beginning of the shared space, so that other processes can access them.\relax }}{20}{figure.caption.13}}
\newlabel{fig:task_stack}{{2.10}{20}{Shared stack where a worker process keeps its pending jobs. Entries can have varied sizes, this size is stored at the beginning of the entry and can be used to retrieve the corresponding job. Information for the specific stack,like size and head, are stored at the beginning of the shared space, so that other processes can access them.\relax \relax }{figure.caption.13}{}}
\citation{Beckman96tulip:a,Saunders:2003:AAP:966049.781534,Foster96thenexus,vonEicken:1992:AMM:146628.140382}
\citation{Saunders:2003:AAP:966049.781534,Shah:1998:PEL:876880.879642}
\citation{Saunders:2003:AAP:966049.781534,Shah:1998:PEL:876880.879642,Foster96thenexus,vonEicken:1992:AMM:146628.140382}
\citation{Foster96thenexus}
\citation{Foster96thenexus}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.1}Alternative Implementations/Design Versatility}{21}{subsection.2.4.1}}
\newlabel{sect:impl_alt_impl}{{2.4.1}{21}{Alternative Implementations/Design Versatility\relax }{subsection.2.4.1}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Evaluation}{23}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{sect:eval_intro}{{3}{23}{Evaluation\relax }{chapter.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Microbenchmarks}{23}{section.3.1}}
\newlabel{sect:microbenchmark}{{3.1}{23}{Microbenchmarks\relax }{section.3.1}{}}
\citation{Buttari:2009:CPT:1486274.1486415}
\citation{1742-6596-180-1-012037}
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces Comparison between issuing functors with scalar arguments versus vector objects of size 1\relax }}{24}{figure.caption.14}}
\newlabel{fig:issue_time_scalar_vs_containers}{{3.1}{24}{Comparison between issuing functors with scalar arguments versus vector objects of size 1\relax \relax }{figure.caption.14}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces Comparison between issuing functors with different number of vector arguments, but total size of arguments is the same in all cases.\relax }}{24}{figure.caption.15}}
\newlabel{fig:issue_time_different_argnum_same_size}{{3.2}{24}{Comparison between issuing functors with different number of vector arguments, but total size of arguments is the same in all cases.\relax \relax }{figure.caption.15}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces Comparison between issuing functors with 1 vector argument of different sizes\relax }}{25}{figure.caption.16}}
\newlabel{fig:job_issue_time_different_argsizes}{{3.3}{25}{Comparison between issuing functors with 1 vector argument of different sizes\relax \relax }{figure.caption.16}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Real Application Benchmarking}{25}{section.3.2}}
\newlabel{sect:real_app}{{3.2}{25}{Real Application Benchmarking\relax }{section.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces A quicksort implementation using the distributed futures interface\relax }}{28}{figure.caption.17}}
\newlabel{lst:quicksort}{{3.4}{28}{A quicksort implementation using the distributed futures interface\relax \relax }{figure.caption.17}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.5}{\ignorespaces The tiled LU kernel implementation\relax }}{29}{figure.caption.18}}
\newlabel{lst:tiledLUseq}{{3.5}{29}{The tiled LU kernel implementation\relax \relax }{figure.caption.18}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.6}{\ignorespaces The tiled LU parallel kernel implementation\relax }}{29}{figure.caption.19}}
\newlabel{lst:tiledLUpar}{{3.6}{29}{The tiled LU parallel kernel implementation\relax \relax }{figure.caption.19}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.7}{\ignorespaces Scalability graph for fibonacci, quicksort and LU\relax }}{30}{figure.caption.20}}
\newlabel{fig:apps_scalability}{{3.7}{30}{Scalability graph for fibonacci, quicksort and LU\relax \relax }{figure.caption.20}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.8}{\ignorespaces Speedup graph for fibonacci, quicksort and LU\relax }}{30}{figure.caption.21}}
\newlabel{fig:apps_speedup}{{3.8}{30}{Speedup graph for fibonacci, quicksort and LU\relax \relax }{figure.caption.21}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.9}{\ignorespaces Breakdowns of master and worker execution time graph for fibonacci, quicksort and LU\relax }}{31}{figure.caption.22}}
\newlabel{fig:app_breakdowns_6cores}{{3.9}{31}{Breakdowns of master and worker execution time graph for fibonacci, quicksort and LU\relax \relax }{figure.caption.22}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.10}{\ignorespaces Breakdowns of master and worker execution time graph for fibonacci, quicksort and LU, with initialization and finalization times\relax }}{31}{figure.caption.23}}
\newlabel{fig:app_breakdowns_w_init}{{3.10}{31}{Breakdowns of master and worker execution time graph for fibonacci, quicksort and LU, with initialization and finalization times\relax \relax }{figure.caption.23}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Conclusions and Future Work}{33}{chapter.4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\bibstyle{IEEEtran}
\bibdata{references}
\bibcite{Ayguade:2009:DOT:1512157.1512430}{{1}{}{{}}{{}}}
\bibcite{Nieplocha99armci:a}{{2}{}{{}}{{}}}
\bibcite{Shah:1998:PEL:876880.879642}{{3}{}{{}}{{}}}
\bibcite{Chapman:2010:IOS:2020373.2020375}{{4}{}{{}}{{}}}
\bibcite{Nieplocha:2006:AAP:1125980.1125985}{{5}{}{{}}{{}}}
\bibcite{Blumofe95cilk:an}{{6}{}{{}}{{}}}
\bibcite{Saunders:2003:AAP:966049.781534}{{7}{}{{}}{{}}}
\bibcite{Beckman96tulip:a}{{8}{}{{}}{{}}}
\bibcite{Vadhiyar03gradsolve-}{{9}{}{{}}{{}}}
\bibcite{Foster96thenexus}{{10}{}{{}}{{}}}
\bibcite{HPX:TOBE}{{11}{}{{}}{{}}}
\bibcite{CPP:Threads}{{12}{}{{}}{{}}}
\bibcite{Dinan:2012:SGA:2357496.2358660}{{13}{}{{}}{{}}}
\bibcite{Bonachea:mpi2}{{14}{}{{}}{{}}}
\bibcite{A_hydra-mpi:an}{{15}{}{{}}{{}}}
\bibcite{Cui:2010:SES:1884643.1884646}{{16}{}{{}}{{}}}
\bibcite{Kaiser:2009:PAP:1678991.1679815}{{17}{}{{}}{{}}}
\bibcite{Kale93charm++:a}{{18}{}{{}}{{}}}
\bibcite{Bonachea:ammpi}{{19}{}{{}}{{}}}
\bibcite{Ramey:2004:Boost:Serialization}{{20}{}{{}}{{}}}
\bibcite{Gregor:2005:Boost:MPI}{{21}{}{{}}{{}}}
\bibcite{Dinan:2011:NCC:2042476.2042508}{{22}{}{{}}{{}}}
\bibcite{Tanenbaum:2007:MOS:1410217}{{23}{}{{}}{{}}}
\bibcite{vonEicken:1992:AMM:146628.140382}{{24}{}{{}}{{}}}
\bibcite{Buttari:2009:CPT:1486274.1486415}{{25}{}{{}}{{}}}
\bibcite{1742-6596-180-1-012037}{{26}{}{{}}{{}}}
\providecommand\NAT@force@numbers{}\NAT@force@numbers
