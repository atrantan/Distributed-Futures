* Find a way to delete array of objects...if you simply delete allocated data it causes an error in glibc
	- preferably the interface should not work with pointers, but with objects, in any case
		since we have support now, just leave it as is
* Add exceptions
* Implement a much more sophisticated scheduler
* Now worker will block until future gets value, in order to delete sharedData,
	need another mechanism to delete data without anyone blocking
* ISSUE: cannot use function pointers, since they cannot be serialized.  Maybe we could
	serialize an id or something and then reconstruct it on worker end.
* Fine tune locks on scheduler
* Share scheduler variables
